import streamlit as st
import numpy as np
from quant_model import get_model

# =======================
# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
# =======================
st.set_page_config(page_title="–¢–µ—Å—Ç –∫–≤–∞–Ω—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π", layout="wide")
st.title("üß† –¢–µ—Å—Ç –∫–≤–∞–Ω—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π ONNX (int8)")

# =======================
# üì• –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
# =======================
with st.spinner("–ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å..."):
    model = get_model()

st.success("‚úÖ –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞!")

# =======================
# üìù –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
# =======================
input_text = st.text_area(
    "–í–≤–µ–¥–∏—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤ (–∫–∞–∂–¥—ã–π —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):",
    "–ü—Ä–∏–≤–µ—Ç –º–∏—Ä\n–ö–≤–∞–Ω—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏ —ç–∫–æ–Ω–æ–º—è—Ç –ø–∞–º—è—Ç—å!"
)

normalize = st.checkbox("–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å —ç–º–±–µ–¥–¥–∏–Ω–≥–∏", value=True)

# =======================
# üöÄ –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞
# =======================
if st.button("üîç –ü–æ–ª—É—á–∏—Ç—å —ç–º–±–µ–¥–¥–∏–Ω–≥–∏"):
    texts = [t.strip() for t in input_text.split("\n") if t.strip()]
    if not texts:
        st.warning("–í–≤–µ–¥–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ç–µ–∫—Å—Ç")
    else:
        with st.spinner("–í—ã—á–∏—Å–ª—è–µ–º —ç–º–±–µ–¥–¥–∏–Ω–≥–∏..."):
            embeddings = model.encode(texts, normalize_embeddings=normalize)

        st.success("‚úÖ –ì–æ—Ç–æ–≤–æ!")
        st.write(f"–§–æ—Ä–º–∞ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤: {embeddings.shape}")

        # –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä
        st.write("üî¢ –ü–µ—Ä–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ —ç–º–±–µ–¥–¥–∏–Ω–≥–∞:")
        st.code(np.round(embeddings[0][:10], 4))

        # –¢–∞–±–ª–∏—Ü–∞ –≤—Å–µ—Ö —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
        st.write("üìä –í—Å–µ —ç–º–±–µ–¥–¥–∏–Ω–≥–∏:")
        st.dataframe(np.round(embeddings, 4))

# =======================
# üìà –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å–æ–≤
# =======================
st.markdown("---")
st.subheader("üìà –†–µ—Å—É—Ä—Å—ã —Å–∏—Å—Ç–µ–º—ã")
stats = model.profile()
col1, col2, col3 = st.columns(3)
col1.metric("CPU (%)", stats["cpu_percent"])
col2.metric("RAM (%)", stats["ram_percent"])
col3.metric("RAM (MB)", round(stats["ram_mb"], 1))
